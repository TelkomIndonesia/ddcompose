#!/bin/bash

# wrapper of md5
function env._md5 {
    if which md5 >/dev/zero; then
        md5 "$@" | awk '{print $NF}'
    elif which md5sum >/dev/zero; then
        md5sum "$@" | awk '{print $1}'
    fi
}

# wrapper of xargs | md5
function env._xargs-md5 {
    if which md5 >/dev/zero; then
        xargs md5
    elif which md5sum >/dev/zero; then
        xargs md5sum
    fi
}

# generate environment for each files and folder based on ther name and contents
function env.fenv {
    DIR=${1:-"${DIR:-"."}"}

    for file in $(find $DIR -type f); do
        name=$(echo -n "$file" | env._md5)
        content=$(env._md5 "$file")
        export "__FILE_$name"="$content"
    done

    for folder in $(find $DIR -type d); do
        name=$(echo -n "$folder" | env._md5)
        content="$(find "$folder" -type f | env._xargs-md5 | env._md5)"
        export "__FOLDER_$name"="$content"
    done
}

# list name of the environment of each file/folder that will be generated by `env.fenv`
function env.fenvname {
    DIR=${1:-"${DIR:-"."}"}

    for file in $(find $DIR -type f); do
        echo "$file => __FILE_"$(echo -n "$file" | env._md5)
    done

    for folder in $(find $DIR -type d); do
        echo "$folder => __FOLDER_"$(echo -n "$folder" | env._md5)
    done
}

# load environment variables from files
function env.dotenv {
    if [ $# -eq 0 ]; then
        set -- "${@:1:1}" ".env"
    fi

    for file in "$@"; do
        if [ ! -f "$file" ]; then
            continue
        fi

        set -o allexport
        source "$file"
        set +o allexport
    done
}
